name: CI
on:
  push:
    branches:
      - master
      - release-*
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false
    strategy:
      fail-fast: false
      matrix:
        # Since InfiniteOpt doesn't have binary dependencies, only test on a subset of
        # possible platforms.
        include:
          - version: '1.10'
            os: ubuntu-latest
            arch: x64
          - version: '1'
            os: ubuntu-latest
            arch: x64
          - version: '1'
            os: ubuntu-latest
            arch: x86
          - version: '1'
            os: windows-latest
            arch: x64
          - version: '1'
            os: macOS-latest
            arch: x64
          - version: 'nightly'
            os: ubuntu-latest
            arch: x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
        # env:
        #   cache-name: cache-artifacts
        # with:
        #   path: ~/.julia/artifacts
        #   key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
        #   restore-keys: |
        #     ${{ runner.os }}-test-${{ env.cache-name }}-
        #     ${{ runner.os }}-test-
        #     ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        continue-on-error: ${{ matrix.version == 'nightly' }}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          file: lcov.info
